use arrayvec::ArrayVec;

use super::MicroOp;

#[repr(u8)]
#[derive(Copy, Clone, Debug)]
pub enum Prefix {
    CB = 0xCB,
    // DD = 0xDD,
    ED = 0xED,
    // FD = 0xFD,
}

#[repr(u8)]
pub enum ImmediateBytes {
    Zero = 0,
    One = 1,
    Two = 2,
}

#[repr(u8)]
pub enum InstructionSize {
    One = 1,
    Two = 2,
    Three = 3,
    Four = 4,
}

#[allow(bad_style)]
#[derive(Copy, Clone, Debug)]
#[repr(u16)]
pub enum RawInstruction {
    NOP = 0x00,
    LD_BC_nn = 0x01,
    LD_indBC_A = 0x02,
    INC_BC = 0x03,
    INC_B = 0x04,
    DEC_B = 0x05,
    LD_B_n = 0x06,
    RLCA = 0x07,
    LD_indnn_SP = 0x08,
    ADD_HL_BC = 0x09,
    LD_A_indBC = 0x0A,
    DEC_BC = 0x0B,
    INC_C = 0x0C,
    DEC_C = 0x0D,
    LD_C_n = 0x0E,
    RRCA = 0x0F,
    STOP = 0x10,
    LD_DE_nn = 0x11,
    LD_indDE_A = 0x12,
    INC_DE = 0x13,
    INC_D = 0x14,
    DEC_D = 0x15,
    LD_D_n = 0x16,
    RLA = 0x17,
    JR_d = 0x18,
    ADD_HL_DE = 0x19,
    LD_A_indDE = 0x1A,
    DEC_DE = 0x1B,
    INC_E = 0x1C,
    DEC_E = 0x1D,
    LD_E_n = 0x1E,
    RRA = 0x1F,
    JR_NZ_d = 0x20,
    LD_HL_nn = 0x21,
    LD_indHLI_A = 0x22,
    INC_HL = 0x23,
    INC_H = 0x24,
    DEC_H = 0x25,
    LD_H_n = 0x26,
    DAA = 0x27,
    JR_Z_d = 0x28,
    ADD_HL_HL = 0x29,
    LD_A_indHLI = 0x2A,
    DEC_HL = 0x2B,
    INC_L = 0x2C,
    DEC_L = 0x2D,
    LD_L_n = 0x2E,
    CPL = 0x2F,
    JR_NC_d = 0x30,
    LD_SP_nn = 0x31,
    LD_indHLD_A = 0x32,
    INC_SP = 0x33,
    INC_indHL = 0x34,
    DEC_indHL = 0x35,
    LD_indHL_n = 0x36,
    SCF = 0x37,
    JR_C_d = 0x38,
    ADD_HL_SP = 0x39,
    LD_A_indHLD = 0x3A,
    DEC_SP = 0x3B,
    INC_A = 0x3C,
    DEC_A = 0x3D,
    LD_A_n = 0x3E,
    CCF = 0x3F,
    LD_B_B = 0x40,
    LD_B_C = 0x41,
    LD_B_D = 0x42,
    LD_B_E = 0x43,
    LD_B_H = 0x44,
    LD_B_L = 0x45,
    LD_B_indHL = 0x46,
    LD_B_A = 0x47,
    LD_C_B = 0x48,
    LD_C_C = 0x49,
    LD_C_D = 0x4A,
    LD_C_E = 0x4B,
    LD_C_H = 0x4C,
    LD_C_L = 0x4D,
    LD_C_indHL = 0x4E,
    LD_C_A = 0x4F,
    LD_D_B = 0x50,
    LD_D_C = 0x51,
    LD_D_D = 0x52,
    LD_D_E = 0x53,
    LD_D_H = 0x54,
    LD_D_L = 0x55,
    LD_D_indHL = 0x56,
    LD_D_A = 0x57,
    LD_E_B = 0x58,
    LD_E_C = 0x59,
    LD_E_D = 0x5A,
    LD_E_E = 0x5B,
    LD_E_H = 0x5C,
    LD_E_L = 0x5D,
    LD_E_indHL = 0x5E,
    LD_E_A = 0x5F,
    LD_H_B = 0x60,
    LD_H_C = 0x61,
    LD_H_D = 0x62,
    LD_H_E = 0x63,
    LD_H_H = 0x64,
    LD_H_L = 0x65,
    LD_H_indHL = 0x66,
    LD_H_A = 0x67,
    LD_L_B = 0x68,
    LD_L_C = 0x69,
    LD_L_D = 0x6A,
    LD_L_E = 0x6B,
    LD_L_H = 0x6C,
    LD_L_L = 0x6D,
    LD_L_indHL = 0x6E,
    LD_L_A = 0x6F,
    LD_indHL_B = 0x70,
    LD_indHL_C = 0x71,
    LD_indHL_D = 0x72,
    LD_indHL_E = 0x73,
    LD_indHL_H = 0x74,
    LD_indHL_L = 0x75,
    HALT = 0x76,
    LD_indHL_A = 0x77,
    LD_A_B = 0x78,
    LD_A_C = 0x79,
    LD_A_D = 0x7A,
    LD_A_E = 0x7B,
    LD_A_H = 0x7C,
    LD_A_L = 0x7D,
    LD_A_indHL = 0x7E,
    LD_A_A = 0x7F,
    ADD_A_B = 0x80,
    ADD_A_C = 0x81,
    ADD_A_D = 0x82,
    ADD_A_E = 0x83,
    ADD_A_H = 0x84,
    ADD_A_L = 0x85,
    ADD_A_indHL = 0x86,
    ADD_A_A = 0x87,
    ADC_A_B = 0x88,
    ADC_A_C = 0x89,
    ADC_A_D = 0x8A,
    ADC_A_E = 0x8B,
    ADC_A_H = 0x8C,
    ADC_A_L = 0x8D,
    ADC_A_indHL = 0x8E,
    ADC_A_A = 0x8F,
    SUB_B = 0x90,
    SUB_C = 0x91,
    SUB_D = 0x92,
    SUB_E = 0x93,
    SUB_H = 0x94,
    SUB_L = 0x95,
    SUB_indHL = 0x96,
    SUB_A = 0x97,
    SBC_B = 0x98,
    SBC_C = 0x99,
    SBC_D = 0x9A,
    SBC_E = 0x9B,
    SBC_H = 0x9C,
    SBC_L = 0x9D,
    SBC_indHL = 0x9E,
    SBC_A = 0x9F,
    AND_B = 0xA0,
    AND_C = 0xA1,
    AND_D = 0xA2,
    AND_E = 0xA3,
    AND_H = 0xA4,
    AND_L = 0xA5,
    AND_indHL = 0xA6,
    AND_A = 0xA7,
    XOR_B = 0xA8,
    XOR_C = 0xA9,
    XOR_D = 0xAA,
    XOR_E = 0xAB,
    XOR_H = 0xAC,
    XOR_L = 0xAD,
    XOR_indHL = 0xAE,
    XOR_A = 0xAF,
    OR_B = 0xB0,
    OR_C = 0xB1,
    OR_D = 0xB2,
    OR_E = 0xB3,
    OR_H = 0xB4,
    OR_L = 0xB5,
    OR_indHL = 0xB6,
    OR_A = 0xB7,
    CP_B = 0xB8,
    CP_C = 0xB9,
    CP_D = 0xBA,
    CP_E = 0xBB,
    CP_H = 0xBC,
    CP_L = 0xBD,
    CP_indHL = 0xBE,
    CP_A = 0xBF,
    RET_NZ = 0xC0,
    POP_BC = 0xC1,
    JP_NZ_nn = 0xC2,
    JP_nn = 0xC3,
    CALL_NZ_nn = 0xC4,
    PUSH_BC = 0xC5,
    ADD_A_n = 0xC6,
    RST_00H = 0xC7,
    RET_Z = 0xC8,
    RET = 0xC9,
    JP_Z_nn = 0xCA,
    CALL_Z_nn = 0xCC,
    CALL_nn = 0xCD,
    ADC_A_n = 0xCE,
    RST_08H = 0xCF,
    RET_NC = 0xD0,
    POP_DE = 0xD1,
    JP_NC_nn = 0xD2,
    UNK_D3 = 0xD3,
    CALL_NC_nn = 0xD4,
    PUSH_DE = 0xD5,
    SUB_n = 0xD6,
    RST_10H = 0xD7,
    RET_C = 0xD8,
    RETI = 0xD9,
    JP_C_nn = 0xDA,
    UNK_DB = 0xDB,
    CALL_C_nn = 0xDC,
    UNK_DD = 0xDD,
    SBC_A_n = 0xDE,
    RST_18H = 0xDF,
    LD_indn_A = 0xE0,
    POP_HL = 0xE1,
    LD_indC_A = 0xE2,
    UNK_E3 = 0xE3,
    UNK_E4 = 0xE4,
    PUSH_HL = 0xE5,
    AND_n = 0xE6,
    RST_20H = 0xE7,
    ADD_SP_d = 0xE8,
    JP_indHL = 0xE9,
    LD_indnn_A = 0xEA,
    UNK_EB = 0xEB,
    UNK_EC = 0xEC,
    XOR_n = 0xEE,
    RST_28H = 0xEF,
    LD_A_d = 0xF0,
    POP_AF = 0xF1,
    UNK_F2 = 0xF2,
    DI = 0xF3,
    UNK_F4 = 0xF4,
    PUSH_AF = 0xF5,
    OR_n = 0xF6,
    RST_30H = 0xF7,
    LD_HL_SP_d = 0xF8,
    LD_SP_HL = 0xF9,
    LD_A_indnn = 0xFA,
    EI = 0xFB,
    UNK_FC = 0xFC,
    UNK_FD = 0xFD,
    CP_n = 0xFE,
    RST_38H = 0xFF,
    RLC_B = 0xCB00,
    RLC_C = 0xCB01,
    RLC_D = 0xCB02,
    RLC_E = 0xCB03,
    RLC_H = 0xCB04,
    RLC_L = 0xCB05,
    RLC_indHL = 0xCB06,
    RLC_A = 0xCB07,
    RRC_B = 0xCB08,
    RRC_C = 0xCB09,
    RRC_D = 0xCB0A,
    RRC_E = 0xCB0B,
    RRC_H = 0xCB0C,
    RRC_L = 0xCB0D,
    RRC_indHL = 0xCB0E,
    RRC_A = 0xCB0F,
    RL_B = 0xCB10,
    RL_C = 0xCB11,
    RL_D = 0xCB12,
    RL_E = 0xCB13,
    RL_H = 0xCB14,
    RL_L = 0xCB15,
    RL_indHL = 0xCB16,
    RL_A = 0xCB17,
    RR_B = 0xCB18,
    RR_C = 0xCB19,
    RR_D = 0xCB1A,
    RR_E = 0xCB1B,
    RR_H = 0xCB1C,
    RR_L = 0xCB1D,
    RR_indHL = 0xCB1E,
    RR_A = 0xCB1F,
    SLA_B = 0xCB20,
    SLA_C = 0xCB21,
    SLA_D = 0xCB22,
    SLA_E = 0xCB23,
    SLA_H = 0xCB24,
    SLA_L = 0xCB25,
    SLA_indHL = 0xCB26,
    SLA_A = 0xCB27,
    SRA_B = 0xCB28,
    SRA_C = 0xCB29,
    SRA_D = 0xCB2A,
    SRA_E = 0xCB2B,
    SRA_H = 0xCB2C,
    SRA_L = 0xCB2D,
    SRA_indHL = 0xCB2E,
    SRA_A = 0xCB2F,
    SRL_B = 0xCB38,
    SRL_C = 0xCB39,
    SRL_D = 0xCB3A,
    SRL_E = 0xCB3B,
    SRL_H = 0xCB3C,
    SRL_L = 0xCB3D,
    SRL_indHL = 0xCB3E,
    SRL_A = 0xCB3F,
    BIT_0_B = 0xCB40,
    BIT_0_C = 0xCB41,
    BIT_0_D = 0xCB42,
    BIT_0_E = 0xCB43,
    BIT_0_H = 0xCB44,
    BIT_0_L = 0xCB45,
    BIT_0_indHL = 0xCB46,
    BIT_0_A = 0xCB47,
    BIT_1_B = 0xCB48,
    BIT_1_C = 0xCB49,
    BIT_1_D = 0xCB4A,
    BIT_1_E = 0xCB4B,
    BIT_1_H = 0xCB4C,
    BIT_1_L = 0xCB4D,
    BIT_1_indHL = 0xCB4E,
    BIT_1_A = 0xCB4F,
    BIT_2_B = 0xCB50,
    BIT_2_C = 0xCB51,
    BIT_2_D = 0xCB52,
    BIT_2_E = 0xCB53,
    BIT_2_H = 0xCB54,
    BIT_2_L = 0xCB55,
    BIT_2_indHL = 0xCB56,
    BIT_2_A = 0xCB57,
    BIT_3_B = 0xCB58,
    BIT_3_C = 0xCB59,
    BIT_3_D = 0xCB5A,
    BIT_3_E = 0xCB5B,
    BIT_3_H = 0xCB5C,
    BIT_3_L = 0xCB5D,
    BIT_3_indHL = 0xCB5E,
    BIT_3_A = 0xCB5F,
    BIT_4_B = 0xCB60,
    BIT_4_C = 0xCB61,
    BIT_4_D = 0xCB62,
    BIT_4_E = 0xCB63,
    BIT_4_H = 0xCB64,
    BIT_4_L = 0xCB65,
    BIT_4_indHL = 0xCB66,
    BIT_4_A = 0xCB67,
    BIT_5_B = 0xCB68,
    BIT_5_C = 0xCB69,
    BIT_5_D = 0xCB6A,
    BIT_5_E = 0xCB6B,
    BIT_5_H = 0xCB6C,
    BIT_5_L = 0xCB6D,
    BIT_5_indHL = 0xCB6E,
    BIT_5_A = 0xCB6F,
    BIT_6_B = 0xCB70,
    BIT_6_C = 0xCB71,
    BIT_6_D = 0xCB72,
    BIT_6_E = 0xCB73,
    BIT_6_H = 0xCB74,
    BIT_6_L = 0xCB75,
    BIT_6_indHL = 0xCB76,
    BIT_6_A = 0xCB77,
    BIT_7_B = 0xCB78,
    BIT_7_C = 0xCB79,
    BIT_7_D = 0xCB7A,
    BIT_7_E = 0xCB7B,
    BIT_7_H = 0xCB7C,
    BIT_7_L = 0xCB7D,
    BIT_7_indHL = 0xCB7E,
    BIT_7_A = 0xCB7F,
    RES_0_B = 0xCB80,
    RES_0_C = 0xCB81,
    RES_0_D = 0xCB82,
    RES_0_E = 0xCB83,
    RES_0_H = 0xCB84,
    RES_0_L = 0xCB85,
    RES_0_indHL = 0xCB86,
    RES_0_A = 0xCB87,
    RES_1_B = 0xCB88,
    RES_1_C = 0xCB89,
    RES_1_D = 0xCB8A,
    RES_1_E = 0xCB8B,
    RES_1_H = 0xCB8C,
    RES_1_L = 0xCB8D,
    RES_1_indHL = 0xCB8E,
    RES_1_A = 0xCB8F,
    RES_2_B = 0xCB90,
    RES_2_C = 0xCB91,
    RES_2_D = 0xCB92,
    RES_2_E = 0xCB93,
    RES_2_H = 0xCB94,
    RES_2_L = 0xCB95,
    RES_2_indHL = 0xCB96,
    RES_2_A = 0xCB97,
    RES_3_B = 0xCB98,
    RES_3_C = 0xCB99,
    RES_3_D = 0xCB9A,
    RES_3_E = 0xCB9B,
    RES_3_H = 0xCB9C,
    RES_3_L = 0xCB9D,
    RES_3_indHL = 0xCB9E,
    RES_3_A = 0xCB9F,
    RES_4_B = 0xCBA0,
    RES_4_C = 0xCBA1,
    RES_4_D = 0xCBA2,
    RES_4_E = 0xCBA3,
    RES_4_H = 0xCBA4,
    RES_4_L = 0xCBA5,
    RES_4_indHL = 0xCBA6,
    RES_4_A = 0xCBA7,
    RES_5_B = 0xCBA8,
    RES_5_C = 0xCBA9,
    RES_5_D = 0xCBAA,
    RES_5_E = 0xCBAB,
    RES_5_H = 0xCBAC,
    RES_5_L = 0xCBAD,
    RES_5_indHL = 0xCBAE,
    RES_5_A = 0xCBAF,
    RES_6_B = 0xCBB0,
    RES_6_C = 0xCBB1,
    RES_6_D = 0xCBB2,
    RES_6_E = 0xCBB3,
    RES_6_H = 0xCBB4,
    RES_6_L = 0xCBB5,
    RES_6_indHL = 0xCBB6,
    RES_6_A = 0xCBB7,
    RES_7_B = 0xCBB8,
    RES_7_C = 0xCBB9,
    RES_7_D = 0xCBBA,
    RES_7_E = 0xCBBB,
    RES_7_H = 0xCBBC,
    RES_7_L = 0xCBBD,
    RES_7_indHL = 0xCBBE,
    RES_7_A = 0xCBBF,
    SET_0_B = 0xCBC0,
    SET_0_C = 0xCBC1,
    SET_0_D = 0xCBC2,
    SET_0_E = 0xCBC3,
    SET_0_H = 0xCBC4,
    SET_0_L = 0xCBC5,
    SET_0_indHL = 0xCBC6,
    SET_0_A = 0xCBC7,
    SET_1_B = 0xCBC8,
    SET_1_C = 0xCBC9,
    SET_1_D = 0xCBCA,
    SET_1_E = 0xCBCB,
    SET_1_H = 0xCBCC,
    SET_1_L = 0xCBCD,
    SET_1_indHL = 0xCBCE,
    SET_1_A = 0xCBCF,
    SET_2_B = 0xCBD0,
    SET_2_C = 0xCBD1,
    SET_2_D = 0xCBD2,
    SET_2_E = 0xCBD3,
    SET_2_H = 0xCBD4,
    SET_2_L = 0xCBD5,
    SET_2_indHL = 0xCBD6,
    SET_2_A = 0xCBD7,
    SET_3_B = 0xCBD8,
    SET_3_C = 0xCBD9,
    SET_3_D = 0xCBDA,
    SET_3_E = 0xCBDB,
    SET_3_H = 0xCBDC,
    SET_3_L = 0xCBDD,
    SET_3_indHL = 0xCBDE,
    SET_3_A = 0xCBDF,
    SET_4_B = 0xCBE0,
    SET_4_C = 0xCBE1,
    SET_4_D = 0xCBE2,
    SET_4_E = 0xCBE3,
    SET_4_H = 0xCBE4,
    SET_4_L = 0xCBE5,
    SET_4_indHL = 0xCBE6,
    SET_4_A = 0xCBE7,
    SET_5_B = 0xCBE8,
    SET_5_C = 0xCBE9,
    SET_5_D = 0xCBEA,
    SET_5_E = 0xCBEB,
    SET_5_H = 0xCBEC,
    SET_5_L = 0xCBED,
    SET_5_indHL = 0xCBEE,
    SET_5_A = 0xCBEF,
    SET_6_B = 0xCBF0,
    SET_6_C = 0xCBF1,
    SET_6_D = 0xCBF2,
    SET_6_E = 0xCBF3,
    SET_6_H = 0xCBF4,
    SET_6_L = 0xCBF5,
    SET_6_indHL = 0xCBF6,
    SET_6_A = 0xCBF7,
    SET_7_B = 0xCBF8,
    SET_7_C = 0xCBF9,
    SET_7_D = 0xCBFA,
    SET_7_E = 0xCBFB,
    SET_7_H = 0xCBFC,
    SET_7_L = 0xCBFD,
    SET_7_indHL = 0xCBFE,
    SET_7_A = 0xCBFF,
    IN_B_indC = 0xED40,
    OUT_indC_B = 0xED41,
    SBC_HL_BC = 0xED42,
    LD_indnn_BC = 0xED43,
    NEG = 0xED44,
    RETN = 0xED45,
    IM_0 = 0xED46,
    LD_I_A = 0xED47,
    IN_C_indC = 0xED48,
    OUT_indC_C = 0xED49,
    ADC_HL_BC = 0xED4A,
    LD_BC_indnn = 0xED4B,
    LD_R_A = 0xED4F,
    IN_D_indC = 0xED50,
    OUT_indC_D = 0xED51,
    SBC_HL_DE = 0xED52,
    LD_indnn_DE = 0xED53,
    IM_1 = 0xED56,
    LD_A_I = 0xED57,
    IN_E_indC = 0xED58,
    OUT_indC_E = 0xED59,
    ADC_HL_DE = 0xED5A,
    LD_DE_indnn = 0xED5B,
    IM_2 = 0xED5E,
    LD_A_R = 0xED5F,
    IN_H_indC = 0xED60,
    OUT_indC_H = 0xED61,
    SBC_HL_HL = 0xED62,
    RRD = 0xED67,
    IN_L_indC = 0xED68,
    OUT_indC_L = 0xED69,
    ADC_HL_HL = 0xED6A,
    RLD = 0xED6F,
    SBC_HL_SP = 0xED72,
    IN_A_indC = 0xED78,
    OUT_indC_A = 0xED79,
    ADC_HL_SP = 0xED7A,
    LD_SP_indnn = 0xED7B,
    LDI = 0xEDA0,
    CPI = 0xEDA1,
    INI = 0xEDA2,
    OUTI = 0xEDA3,
    LDD = 0xEDA8,
    CPD = 0xEDA9,
    IND = 0xEDAA,
    OUTD = 0xEDAB,
    LDIR = 0xEDB0,
    CPIR = 0xEDB1,
    INIR = 0xEDB2,
    OTIR = 0xEDB3,
    LDDR = 0xEDB8,
    CPDR = 0xEDB9,
    INDR = 0xEDBA,
    OTDR = 0xEDBB,
}

impl RawInstruction {
    pub fn from_byte(byte: u8) -> Result<Self, Prefix> {
        match byte {
            0x00 => Ok(Self::NOP),
            0x01 => Ok(Self::LD_BC_nn),
            0x02 => Ok(Self::LD_indBC_A),
            0x03 => Ok(Self::INC_BC),
            0x04 => Ok(Self::INC_B),
            0x05 => Ok(Self::DEC_B),
            0x06 => Ok(Self::LD_B_n),
            0x07 => Ok(Self::RLCA),
            0x08 => Ok(Self::LD_indnn_SP),
            0x09 => Ok(Self::ADD_HL_BC),
            0x0A => Ok(Self::LD_A_indBC),
            0x0B => Ok(Self::DEC_BC),
            0x0C => Ok(Self::INC_C),
            0x0D => Ok(Self::DEC_C),
            0x0E => Ok(Self::LD_C_n),
            0x0F => Ok(Self::RRCA),
            0x10 => Ok(Self::STOP),
            0x11 => Ok(Self::LD_DE_nn),
            0x12 => Ok(Self::LD_indDE_A),
            0x13 => Ok(Self::INC_DE),
            0x14 => Ok(Self::INC_D),
            0x15 => Ok(Self::DEC_D),
            0x16 => Ok(Self::LD_D_n),
            0x17 => Ok(Self::RLA),
            0x18 => Ok(Self::JR_d),
            0x19 => Ok(Self::ADD_HL_DE),
            0x1A => Ok(Self::LD_A_indDE),
            0x1B => Ok(Self::DEC_DE),
            0x1C => Ok(Self::INC_E),
            0x1D => Ok(Self::DEC_E),
            0x1E => Ok(Self::LD_E_n),
            0x1F => Ok(Self::RRA),
            0x20 => Ok(Self::JR_NZ_d),
            0x21 => Ok(Self::LD_HL_nn),
            0x22 => Ok(Self::LD_indHLI_A),
            0x23 => Ok(Self::INC_HL),
            0x24 => Ok(Self::INC_H),
            0x25 => Ok(Self::DEC_H),
            0x26 => Ok(Self::LD_H_n),
            0x27 => Ok(Self::DAA),
            0x28 => Ok(Self::JR_Z_d),
            0x29 => Ok(Self::ADD_HL_HL),
            0x2A => Ok(Self::LD_A_indHLI),
            0x2B => Ok(Self::DEC_HL),
            0x2C => Ok(Self::INC_L),
            0x2D => Ok(Self::DEC_L),
            0x2E => Ok(Self::LD_L_n),
            0x2F => Ok(Self::CPL),
            0x30 => Ok(Self::JR_NC_d),
            0x31 => Ok(Self::LD_SP_nn),
            0x32 => Ok(Self::LD_indHLD_A),
            0x33 => Ok(Self::INC_SP),
            0x34 => Ok(Self::INC_indHL),
            0x35 => Ok(Self::DEC_indHL),
            0x36 => Ok(Self::LD_indHL_n),
            0x37 => Ok(Self::SCF),
            0x38 => Ok(Self::JR_C_d),
            0x39 => Ok(Self::ADD_HL_SP),
            0x3A => Ok(Self::LD_A_indHLD),
            0x3B => Ok(Self::DEC_SP),
            0x3C => Ok(Self::INC_A),
            0x3D => Ok(Self::DEC_A),
            0x3E => Ok(Self::LD_A_n),
            0x3F => Ok(Self::CCF),
            0x40 => Ok(Self::LD_B_B),
            0x41 => Ok(Self::LD_B_C),
            0x42 => Ok(Self::LD_B_D),
            0x43 => Ok(Self::LD_B_E),
            0x44 => Ok(Self::LD_B_H),
            0x45 => Ok(Self::LD_B_L),
            0x46 => Ok(Self::LD_B_indHL),
            0x47 => Ok(Self::LD_B_A),
            0x48 => Ok(Self::LD_C_B),
            0x49 => Ok(Self::LD_C_C),
            0x4A => Ok(Self::LD_C_D),
            0x4B => Ok(Self::LD_C_E),
            0x4C => Ok(Self::LD_C_H),
            0x4D => Ok(Self::LD_C_L),
            0x4E => Ok(Self::LD_C_indHL),
            0x4F => Ok(Self::LD_C_A),
            0x50 => Ok(Self::LD_D_B),
            0x51 => Ok(Self::LD_D_C),
            0x52 => Ok(Self::LD_D_D),
            0x53 => Ok(Self::LD_D_E),
            0x54 => Ok(Self::LD_D_H),
            0x55 => Ok(Self::LD_D_L),
            0x56 => Ok(Self::LD_D_indHL),
            0x57 => Ok(Self::LD_D_A),
            0x58 => Ok(Self::LD_E_B),
            0x59 => Ok(Self::LD_E_C),
            0x5A => Ok(Self::LD_E_D),
            0x5B => Ok(Self::LD_E_E),
            0x5C => Ok(Self::LD_E_H),
            0x5D => Ok(Self::LD_E_L),
            0x5E => Ok(Self::LD_E_indHL),
            0x5F => Ok(Self::LD_E_A),
            0x60 => Ok(Self::LD_H_B),
            0x61 => Ok(Self::LD_H_C),
            0x62 => Ok(Self::LD_H_D),
            0x63 => Ok(Self::LD_H_E),
            0x64 => Ok(Self::LD_H_H),
            0x65 => Ok(Self::LD_H_L),
            0x66 => Ok(Self::LD_H_indHL),
            0x67 => Ok(Self::LD_H_A),
            0x68 => Ok(Self::LD_L_B),
            0x69 => Ok(Self::LD_L_C),
            0x6A => Ok(Self::LD_L_D),
            0x6B => Ok(Self::LD_L_E),
            0x6C => Ok(Self::LD_L_H),
            0x6D => Ok(Self::LD_L_L),
            0x6E => Ok(Self::LD_L_indHL),
            0x6F => Ok(Self::LD_L_A),
            0x70 => Ok(Self::LD_indHL_B),
            0x71 => Ok(Self::LD_indHL_C),
            0x72 => Ok(Self::LD_indHL_D),
            0x73 => Ok(Self::LD_indHL_E),
            0x74 => Ok(Self::LD_indHL_H),
            0x75 => Ok(Self::LD_indHL_L),
            0x76 => Ok(Self::HALT),
            0x77 => Ok(Self::LD_indHL_A),
            0x78 => Ok(Self::LD_A_B),
            0x79 => Ok(Self::LD_A_C),
            0x7A => Ok(Self::LD_A_D),
            0x7B => Ok(Self::LD_A_E),
            0x7C => Ok(Self::LD_A_H),
            0x7D => Ok(Self::LD_A_L),
            0x7E => Ok(Self::LD_A_indHL),
            0x7F => Ok(Self::LD_A_A),
            0x80 => Ok(Self::ADD_A_B),
            0x81 => Ok(Self::ADD_A_C),
            0x82 => Ok(Self::ADD_A_D),
            0x83 => Ok(Self::ADD_A_E),
            0x84 => Ok(Self::ADD_A_H),
            0x85 => Ok(Self::ADD_A_L),
            0x86 => Ok(Self::ADD_A_indHL),
            0x87 => Ok(Self::ADD_A_A),
            0x88 => Ok(Self::ADC_A_B),
            0x89 => Ok(Self::ADC_A_C),
            0x8A => Ok(Self::ADC_A_D),
            0x8B => Ok(Self::ADC_A_E),
            0x8C => Ok(Self::ADC_A_H),
            0x8D => Ok(Self::ADC_A_L),
            0x8E => Ok(Self::ADC_A_indHL),
            0x8F => Ok(Self::ADC_A_A),
            0x90 => Ok(Self::SUB_B),
            0x91 => Ok(Self::SUB_C),
            0x92 => Ok(Self::SUB_D),
            0x93 => Ok(Self::SUB_E),
            0x94 => Ok(Self::SUB_H),
            0x95 => Ok(Self::SUB_L),
            0x96 => Ok(Self::SUB_indHL),
            0x97 => Ok(Self::SUB_A),
            0x98 => Ok(Self::SBC_B),
            0x99 => Ok(Self::SBC_C),
            0x9A => Ok(Self::SBC_D),
            0x9B => Ok(Self::SBC_E),
            0x9C => Ok(Self::SBC_H),
            0x9D => Ok(Self::SBC_L),
            0x9E => Ok(Self::SBC_indHL),
            0x9F => Ok(Self::SBC_A),
            0xA0 => Ok(Self::AND_B),
            0xA1 => Ok(Self::AND_C),
            0xA2 => Ok(Self::AND_D),
            0xA3 => Ok(Self::AND_E),
            0xA4 => Ok(Self::AND_H),
            0xA5 => Ok(Self::AND_L),
            0xA6 => Ok(Self::AND_indHL),
            0xA7 => Ok(Self::AND_A),
            0xA8 => Ok(Self::XOR_B),
            0xA9 => Ok(Self::XOR_C),
            0xAA => Ok(Self::XOR_D),
            0xAB => Ok(Self::XOR_E),
            0xAC => Ok(Self::XOR_H),
            0xAD => Ok(Self::XOR_L),
            0xAE => Ok(Self::XOR_indHL),
            0xAF => Ok(Self::XOR_A),
            0xB0 => Ok(Self::OR_B),
            0xB1 => Ok(Self::OR_C),
            0xB2 => Ok(Self::OR_D),
            0xB3 => Ok(Self::OR_E),
            0xB4 => Ok(Self::OR_H),
            0xB5 => Ok(Self::OR_L),
            0xB6 => Ok(Self::OR_indHL),
            0xB7 => Ok(Self::OR_A),
            0xB8 => Ok(Self::CP_B),
            0xB9 => Ok(Self::CP_C),
            0xBA => Ok(Self::CP_D),
            0xBB => Ok(Self::CP_E),
            0xBC => Ok(Self::CP_H),
            0xBD => Ok(Self::CP_L),
            0xBE => Ok(Self::CP_indHL),
            0xBF => Ok(Self::CP_A),
            0xC0 => Ok(Self::RET_NZ),
            0xC1 => Ok(Self::POP_BC),
            0xC2 => Ok(Self::JP_NZ_nn),
            0xC3 => Ok(Self::JP_nn),
            0xC4 => Ok(Self::CALL_NZ_nn),
            0xC5 => Ok(Self::PUSH_BC),
            0xC6 => Ok(Self::ADD_A_n),
            0xC7 => Ok(Self::RST_00H),
            0xC8 => Ok(Self::RET_Z),
            0xC9 => Ok(Self::RET),
            0xCA => Ok(Self::JP_Z_nn),
            0xCB => Err(Prefix::CB),
            0xCC => Ok(Self::CALL_Z_nn),
            0xCD => Ok(Self::CALL_nn),
            0xCE => Ok(Self::ADC_A_n),
            0xCF => Ok(Self::RST_08H),
            0xD0 => Ok(Self::RET_NC),
            0xD1 => Ok(Self::POP_DE),
            0xD2 => Ok(Self::JP_NC_nn),
            0xD3 => Ok(Self::UNK_D3),
            0xD4 => Ok(Self::CALL_NC_nn),
            0xD5 => Ok(Self::PUSH_DE),
            0xD6 => Ok(Self::SUB_n),
            0xD7 => Ok(Self::RST_10H),
            0xD8 => Ok(Self::RET_C),
            0xD9 => Ok(Self::RETI),
            0xDA => Ok(Self::JP_C_nn),
            0xDB => Ok(Self::UNK_DB),
            0xDC => Ok(Self::CALL_C_nn),
            0xDD => Ok(Self::UNK_DD),
            0xDE => Ok(Self::SBC_A_n),
            0xDF => Ok(Self::RST_18H),
            0xE0 => Ok(Self::LD_indn_A),
            0xE1 => Ok(Self::POP_HL),
            0xE2 => Ok(Self::LD_indC_A),
            0xE3 => Ok(Self::UNK_E3),
            0xE4 => Ok(Self::UNK_E4),
            0xE5 => Ok(Self::PUSH_HL),
            0xE6 => Ok(Self::AND_n),
            0xE7 => Ok(Self::RST_20H),
            0xE8 => Ok(Self::ADD_SP_d),
            0xE9 => Ok(Self::JP_indHL),
            0xEA => Ok(Self::LD_indnn_A),
            0xEB => Ok(Self::UNK_EB),
            0xEC => Ok(Self::UNK_EC),
            0xED => Err(Prefix::ED),
            0xEE => Ok(Self::XOR_n),
            0xEF => Ok(Self::RST_28H),
            0xF0 => Ok(Self::LD_A_d),
            0xF1 => Ok(Self::POP_AF),
            0xF2 => Ok(Self::UNK_F2),
            0xF3 => Ok(Self::DI),
            0xF4 => Ok(Self::UNK_F4),
            0xF5 => Ok(Self::PUSH_AF),
            0xF6 => Ok(Self::OR_n),
            0xF7 => Ok(Self::RST_30H),
            0xF8 => Ok(Self::LD_HL_SP_d),
            0xF9 => Ok(Self::LD_SP_HL),
            0xFA => Ok(Self::LD_A_indnn),
            0xFB => Ok(Self::EI),
            0xFC => Ok(Self::UNK_FC),
            0xFD => Ok(Self::UNK_FD),
            0xFE => Ok(Self::CP_n),
            0xFF => Ok(Self::RST_38H),
        }
    }

    pub fn from_byte_with_prefix(prefix: Prefix, byte: u8) -> Result<Self, &'static str> {
        match (prefix, byte) {
            (Prefix::CB, 0x00) => Ok(Self::RLC_B),
            (Prefix::CB, 0x01) => Ok(Self::RLC_C),
            (Prefix::CB, 0x02) => Ok(Self::RLC_D),
            (Prefix::CB, 0x03) => Ok(Self::RLC_E),
            (Prefix::CB, 0x04) => Ok(Self::RLC_H),
            (Prefix::CB, 0x05) => Ok(Self::RLC_L),
            (Prefix::CB, 0x06) => Ok(Self::RLC_indHL),
            (Prefix::CB, 0x07) => Ok(Self::RLC_A),
            (Prefix::CB, 0x08) => Ok(Self::RRC_B),
            (Prefix::CB, 0x09) => Ok(Self::RRC_C),
            (Prefix::CB, 0x0A) => Ok(Self::RRC_D),
            (Prefix::CB, 0x0B) => Ok(Self::RRC_E),
            (Prefix::CB, 0x0C) => Ok(Self::RRC_H),
            (Prefix::CB, 0x0D) => Ok(Self::RRC_L),
            (Prefix::CB, 0x0E) => Ok(Self::RRC_indHL),
            (Prefix::CB, 0x0F) => Ok(Self::RRC_A),
            (Prefix::CB, 0x10) => Ok(Self::RL_B),
            (Prefix::CB, 0x11) => Ok(Self::RL_C),
            (Prefix::CB, 0x12) => Ok(Self::RL_D),
            (Prefix::CB, 0x13) => Ok(Self::RL_E),
            (Prefix::CB, 0x14) => Ok(Self::RL_H),
            (Prefix::CB, 0x15) => Ok(Self::RL_L),
            (Prefix::CB, 0x16) => Ok(Self::RL_indHL),
            (Prefix::CB, 0x17) => Ok(Self::RL_A),
            (Prefix::CB, 0x18) => Ok(Self::RR_B),
            (Prefix::CB, 0x19) => Ok(Self::RR_C),
            (Prefix::CB, 0x1A) => Ok(Self::RR_D),
            (Prefix::CB, 0x1B) => Ok(Self::RR_E),
            (Prefix::CB, 0x1C) => Ok(Self::RR_H),
            (Prefix::CB, 0x1D) => Ok(Self::RR_L),
            (Prefix::CB, 0x1E) => Ok(Self::RR_indHL),
            (Prefix::CB, 0x1F) => Ok(Self::RR_A),
            (Prefix::CB, 0x20) => Ok(Self::SLA_B),
            (Prefix::CB, 0x21) => Ok(Self::SLA_C),
            (Prefix::CB, 0x22) => Ok(Self::SLA_D),
            (Prefix::CB, 0x23) => Ok(Self::SLA_E),
            (Prefix::CB, 0x24) => Ok(Self::SLA_H),
            (Prefix::CB, 0x25) => Ok(Self::SLA_L),
            (Prefix::CB, 0x26) => Ok(Self::SLA_indHL),
            (Prefix::CB, 0x27) => Ok(Self::SLA_A),
            (Prefix::CB, 0x28) => Ok(Self::SRA_B),
            (Prefix::CB, 0x29) => Ok(Self::SRA_C),
            (Prefix::CB, 0x2A) => Ok(Self::SRA_D),
            (Prefix::CB, 0x2B) => Ok(Self::SRA_E),
            (Prefix::CB, 0x2C) => Ok(Self::SRA_H),
            (Prefix::CB, 0x2D) => Ok(Self::SRA_L),
            (Prefix::CB, 0x2E) => Ok(Self::SRA_indHL),
            (Prefix::CB, 0x2F) => Ok(Self::SRA_A),
            (Prefix::CB, 0x38) => Ok(Self::SRL_B),
            (Prefix::CB, 0x39) => Ok(Self::SRL_C),
            (Prefix::CB, 0x3A) => Ok(Self::SRL_D),
            (Prefix::CB, 0x3B) => Ok(Self::SRL_E),
            (Prefix::CB, 0x3C) => Ok(Self::SRL_H),
            (Prefix::CB, 0x3D) => Ok(Self::SRL_L),
            (Prefix::CB, 0x3E) => Ok(Self::SRL_indHL),
            (Prefix::CB, 0x3F) => Ok(Self::SRL_A),
            (Prefix::CB, 0x40) => Ok(Self::BIT_0_B),
            (Prefix::CB, 0x41) => Ok(Self::BIT_0_C),
            (Prefix::CB, 0x42) => Ok(Self::BIT_0_D),
            (Prefix::CB, 0x43) => Ok(Self::BIT_0_E),
            (Prefix::CB, 0x44) => Ok(Self::BIT_0_H),
            (Prefix::CB, 0x45) => Ok(Self::BIT_0_L),
            (Prefix::CB, 0x46) => Ok(Self::BIT_0_indHL),
            (Prefix::CB, 0x47) => Ok(Self::BIT_0_A),
            (Prefix::CB, 0x48) => Ok(Self::BIT_1_B),
            (Prefix::CB, 0x49) => Ok(Self::BIT_1_C),
            (Prefix::CB, 0x4A) => Ok(Self::BIT_1_D),
            (Prefix::CB, 0x4B) => Ok(Self::BIT_1_E),
            (Prefix::CB, 0x4C) => Ok(Self::BIT_1_H),
            (Prefix::CB, 0x4D) => Ok(Self::BIT_1_L),
            (Prefix::CB, 0x4E) => Ok(Self::BIT_1_indHL),
            (Prefix::CB, 0x4F) => Ok(Self::BIT_1_A),
            (Prefix::CB, 0x50) => Ok(Self::BIT_2_B),
            (Prefix::CB, 0x51) => Ok(Self::BIT_2_C),
            (Prefix::CB, 0x52) => Ok(Self::BIT_2_D),
            (Prefix::CB, 0x53) => Ok(Self::BIT_2_E),
            (Prefix::CB, 0x54) => Ok(Self::BIT_2_H),
            (Prefix::CB, 0x55) => Ok(Self::BIT_2_L),
            (Prefix::CB, 0x56) => Ok(Self::BIT_2_indHL),
            (Prefix::CB, 0x57) => Ok(Self::BIT_2_A),
            (Prefix::CB, 0x58) => Ok(Self::BIT_3_B),
            (Prefix::CB, 0x59) => Ok(Self::BIT_3_C),
            (Prefix::CB, 0x5A) => Ok(Self::BIT_3_D),
            (Prefix::CB, 0x5B) => Ok(Self::BIT_3_E),
            (Prefix::CB, 0x5C) => Ok(Self::BIT_3_H),
            (Prefix::CB, 0x5D) => Ok(Self::BIT_3_L),
            (Prefix::CB, 0x5E) => Ok(Self::BIT_3_indHL),
            (Prefix::CB, 0x5F) => Ok(Self::BIT_3_A),
            (Prefix::CB, 0x60) => Ok(Self::BIT_4_B),
            (Prefix::CB, 0x61) => Ok(Self::BIT_4_C),
            (Prefix::CB, 0x62) => Ok(Self::BIT_4_D),
            (Prefix::CB, 0x63) => Ok(Self::BIT_4_E),
            (Prefix::CB, 0x64) => Ok(Self::BIT_4_H),
            (Prefix::CB, 0x65) => Ok(Self::BIT_4_L),
            (Prefix::CB, 0x66) => Ok(Self::BIT_4_indHL),
            (Prefix::CB, 0x67) => Ok(Self::BIT_4_A),
            (Prefix::CB, 0x68) => Ok(Self::BIT_5_B),
            (Prefix::CB, 0x69) => Ok(Self::BIT_5_C),
            (Prefix::CB, 0x6A) => Ok(Self::BIT_5_D),
            (Prefix::CB, 0x6B) => Ok(Self::BIT_5_E),
            (Prefix::CB, 0x6C) => Ok(Self::BIT_5_H),
            (Prefix::CB, 0x6D) => Ok(Self::BIT_5_L),
            (Prefix::CB, 0x6E) => Ok(Self::BIT_5_indHL),
            (Prefix::CB, 0x6F) => Ok(Self::BIT_5_A),
            (Prefix::CB, 0x70) => Ok(Self::BIT_6_B),
            (Prefix::CB, 0x71) => Ok(Self::BIT_6_C),
            (Prefix::CB, 0x72) => Ok(Self::BIT_6_D),
            (Prefix::CB, 0x73) => Ok(Self::BIT_6_E),
            (Prefix::CB, 0x74) => Ok(Self::BIT_6_H),
            (Prefix::CB, 0x75) => Ok(Self::BIT_6_L),
            (Prefix::CB, 0x76) => Ok(Self::BIT_6_indHL),
            (Prefix::CB, 0x77) => Ok(Self::BIT_6_A),
            (Prefix::CB, 0x78) => Ok(Self::BIT_7_B),
            (Prefix::CB, 0x79) => Ok(Self::BIT_7_C),
            (Prefix::CB, 0x7A) => Ok(Self::BIT_7_D),
            (Prefix::CB, 0x7B) => Ok(Self::BIT_7_E),
            (Prefix::CB, 0x7C) => Ok(Self::BIT_7_H),
            (Prefix::CB, 0x7D) => Ok(Self::BIT_7_L),
            (Prefix::CB, 0x7E) => Ok(Self::BIT_7_indHL),
            (Prefix::CB, 0x7F) => Ok(Self::BIT_7_A),
            (Prefix::CB, 0x80) => Ok(Self::RES_0_B),
            (Prefix::CB, 0x81) => Ok(Self::RES_0_C),
            (Prefix::CB, 0x82) => Ok(Self::RES_0_D),
            (Prefix::CB, 0x83) => Ok(Self::RES_0_E),
            (Prefix::CB, 0x84) => Ok(Self::RES_0_H),
            (Prefix::CB, 0x85) => Ok(Self::RES_0_L),
            (Prefix::CB, 0x86) => Ok(Self::RES_0_indHL),
            (Prefix::CB, 0x87) => Ok(Self::RES_0_A),
            (Prefix::CB, 0x88) => Ok(Self::RES_1_B),
            (Prefix::CB, 0x89) => Ok(Self::RES_1_C),
            (Prefix::CB, 0x8A) => Ok(Self::RES_1_D),
            (Prefix::CB, 0x8B) => Ok(Self::RES_1_E),
            (Prefix::CB, 0x8C) => Ok(Self::RES_1_H),
            (Prefix::CB, 0x8D) => Ok(Self::RES_1_L),
            (Prefix::CB, 0x8E) => Ok(Self::RES_1_indHL),
            (Prefix::CB, 0x8F) => Ok(Self::RES_1_A),
            (Prefix::CB, 0x90) => Ok(Self::RES_2_B),
            (Prefix::CB, 0x91) => Ok(Self::RES_2_C),
            (Prefix::CB, 0x92) => Ok(Self::RES_2_D),
            (Prefix::CB, 0x93) => Ok(Self::RES_2_E),
            (Prefix::CB, 0x94) => Ok(Self::RES_2_H),
            (Prefix::CB, 0x95) => Ok(Self::RES_2_L),
            (Prefix::CB, 0x96) => Ok(Self::RES_2_indHL),
            (Prefix::CB, 0x97) => Ok(Self::RES_2_A),
            (Prefix::CB, 0x98) => Ok(Self::RES_3_B),
            (Prefix::CB, 0x99) => Ok(Self::RES_3_C),
            (Prefix::CB, 0x9A) => Ok(Self::RES_3_D),
            (Prefix::CB, 0x9B) => Ok(Self::RES_3_E),
            (Prefix::CB, 0x9C) => Ok(Self::RES_3_H),
            (Prefix::CB, 0x9D) => Ok(Self::RES_3_L),
            (Prefix::CB, 0x9E) => Ok(Self::RES_3_indHL),
            (Prefix::CB, 0x9F) => Ok(Self::RES_3_A),
            (Prefix::CB, 0xA0) => Ok(Self::RES_4_B),
            (Prefix::CB, 0xA1) => Ok(Self::RES_4_C),
            (Prefix::CB, 0xA2) => Ok(Self::RES_4_D),
            (Prefix::CB, 0xA3) => Ok(Self::RES_4_E),
            (Prefix::CB, 0xA4) => Ok(Self::RES_4_H),
            (Prefix::CB, 0xA5) => Ok(Self::RES_4_L),
            (Prefix::CB, 0xA6) => Ok(Self::RES_4_indHL),
            (Prefix::CB, 0xA7) => Ok(Self::RES_4_A),
            (Prefix::CB, 0xA8) => Ok(Self::RES_5_B),
            (Prefix::CB, 0xA9) => Ok(Self::RES_5_C),
            (Prefix::CB, 0xAA) => Ok(Self::RES_5_D),
            (Prefix::CB, 0xAB) => Ok(Self::RES_5_E),
            (Prefix::CB, 0xAC) => Ok(Self::RES_5_H),
            (Prefix::CB, 0xAD) => Ok(Self::RES_5_L),
            (Prefix::CB, 0xAE) => Ok(Self::RES_5_indHL),
            (Prefix::CB, 0xAF) => Ok(Self::RES_5_A),
            (Prefix::CB, 0xB0) => Ok(Self::RES_6_B),
            (Prefix::CB, 0xB1) => Ok(Self::RES_6_C),
            (Prefix::CB, 0xB2) => Ok(Self::RES_6_D),
            (Prefix::CB, 0xB3) => Ok(Self::RES_6_E),
            (Prefix::CB, 0xB4) => Ok(Self::RES_6_H),
            (Prefix::CB, 0xB5) => Ok(Self::RES_6_L),
            (Prefix::CB, 0xB6) => Ok(Self::RES_6_indHL),
            (Prefix::CB, 0xB7) => Ok(Self::RES_6_A),
            (Prefix::CB, 0xB8) => Ok(Self::RES_7_B),
            (Prefix::CB, 0xB9) => Ok(Self::RES_7_C),
            (Prefix::CB, 0xBA) => Ok(Self::RES_7_D),
            (Prefix::CB, 0xBB) => Ok(Self::RES_7_E),
            (Prefix::CB, 0xBC) => Ok(Self::RES_7_H),
            (Prefix::CB, 0xBD) => Ok(Self::RES_7_L),
            (Prefix::CB, 0xBE) => Ok(Self::RES_7_indHL),
            (Prefix::CB, 0xBF) => Ok(Self::RES_7_A),
            (Prefix::CB, 0xC0) => Ok(Self::SET_0_B),
            (Prefix::CB, 0xC1) => Ok(Self::SET_0_C),
            (Prefix::CB, 0xC2) => Ok(Self::SET_0_D),
            (Prefix::CB, 0xC3) => Ok(Self::SET_0_E),
            (Prefix::CB, 0xC4) => Ok(Self::SET_0_H),
            (Prefix::CB, 0xC5) => Ok(Self::SET_0_L),
            (Prefix::CB, 0xC6) => Ok(Self::SET_0_indHL),
            (Prefix::CB, 0xC7) => Ok(Self::SET_0_A),
            (Prefix::CB, 0xC8) => Ok(Self::SET_1_B),
            (Prefix::CB, 0xC9) => Ok(Self::SET_1_C),
            (Prefix::CB, 0xCA) => Ok(Self::SET_1_D),
            (Prefix::CB, 0xCB) => Ok(Self::SET_1_E),
            (Prefix::CB, 0xCC) => Ok(Self::SET_1_H),
            (Prefix::CB, 0xCD) => Ok(Self::SET_1_L),
            (Prefix::CB, 0xCE) => Ok(Self::SET_1_indHL),
            (Prefix::CB, 0xCF) => Ok(Self::SET_1_A),
            (Prefix::CB, 0xD0) => Ok(Self::SET_2_B),
            (Prefix::CB, 0xD1) => Ok(Self::SET_2_C),
            (Prefix::CB, 0xD2) => Ok(Self::SET_2_D),
            (Prefix::CB, 0xD3) => Ok(Self::SET_2_E),
            (Prefix::CB, 0xD4) => Ok(Self::SET_2_H),
            (Prefix::CB, 0xD5) => Ok(Self::SET_2_L),
            (Prefix::CB, 0xD6) => Ok(Self::SET_2_indHL),
            (Prefix::CB, 0xD7) => Ok(Self::SET_2_A),
            (Prefix::CB, 0xD8) => Ok(Self::SET_3_B),
            (Prefix::CB, 0xD9) => Ok(Self::SET_3_C),
            (Prefix::CB, 0xDA) => Ok(Self::SET_3_D),
            (Prefix::CB, 0xDB) => Ok(Self::SET_3_E),
            (Prefix::CB, 0xDC) => Ok(Self::SET_3_H),
            (Prefix::CB, 0xDD) => Ok(Self::SET_3_L),
            (Prefix::CB, 0xDE) => Ok(Self::SET_3_indHL),
            (Prefix::CB, 0xDF) => Ok(Self::SET_3_A),
            (Prefix::CB, 0xE0) => Ok(Self::SET_4_B),
            (Prefix::CB, 0xE1) => Ok(Self::SET_4_C),
            (Prefix::CB, 0xE2) => Ok(Self::SET_4_D),
            (Prefix::CB, 0xE3) => Ok(Self::SET_4_E),
            (Prefix::CB, 0xE4) => Ok(Self::SET_4_H),
            (Prefix::CB, 0xE5) => Ok(Self::SET_4_L),
            (Prefix::CB, 0xE6) => Ok(Self::SET_4_indHL),
            (Prefix::CB, 0xE7) => Ok(Self::SET_4_A),
            (Prefix::CB, 0xE8) => Ok(Self::SET_5_B),
            (Prefix::CB, 0xE9) => Ok(Self::SET_5_C),
            (Prefix::CB, 0xEA) => Ok(Self::SET_5_D),
            (Prefix::CB, 0xEB) => Ok(Self::SET_5_E),
            (Prefix::CB, 0xEC) => Ok(Self::SET_5_H),
            (Prefix::CB, 0xED) => Ok(Self::SET_5_L),
            (Prefix::CB, 0xEE) => Ok(Self::SET_5_indHL),
            (Prefix::CB, 0xEF) => Ok(Self::SET_5_A),
            (Prefix::CB, 0xF0) => Ok(Self::SET_6_B),
            (Prefix::CB, 0xF1) => Ok(Self::SET_6_C),
            (Prefix::CB, 0xF2) => Ok(Self::SET_6_D),
            (Prefix::CB, 0xF3) => Ok(Self::SET_6_E),
            (Prefix::CB, 0xF4) => Ok(Self::SET_6_H),
            (Prefix::CB, 0xF5) => Ok(Self::SET_6_L),
            (Prefix::CB, 0xF6) => Ok(Self::SET_6_indHL),
            (Prefix::CB, 0xF7) => Ok(Self::SET_6_A),
            (Prefix::CB, 0xF8) => Ok(Self::SET_7_B),
            (Prefix::CB, 0xF9) => Ok(Self::SET_7_C),
            (Prefix::CB, 0xFA) => Ok(Self::SET_7_D),
            (Prefix::CB, 0xFB) => Ok(Self::SET_7_E),
            (Prefix::CB, 0xFC) => Ok(Self::SET_7_H),
            (Prefix::CB, 0xFD) => Ok(Self::SET_7_L),
            (Prefix::CB, 0xFE) => Ok(Self::SET_7_indHL),
            (Prefix::CB, 0xFF) => Ok(Self::SET_7_A),
            (Prefix::ED, 0x40) => Ok(Self::IN_B_indC),
            (Prefix::ED, 0x41) => Ok(Self::OUT_indC_B),
            (Prefix::ED, 0x42) => Ok(Self::SBC_HL_BC),
            (Prefix::ED, 0x43) => Ok(Self::LD_indnn_BC),
            (Prefix::ED, 0x44) => Ok(Self::NEG),
            (Prefix::ED, 0x45) => Ok(Self::RETN),
            (Prefix::ED, 0x46) => Ok(Self::IM_0),
            (Prefix::ED, 0x47) => Ok(Self::LD_I_A),
            (Prefix::ED, 0x48) => Ok(Self::IN_C_indC),
            (Prefix::ED, 0x49) => Ok(Self::OUT_indC_C),
            (Prefix::ED, 0x4A) => Ok(Self::ADC_HL_BC),
            (Prefix::ED, 0x4B) => Ok(Self::LD_BC_indnn),
            (Prefix::ED, 0x4F) => Ok(Self::LD_R_A),
            (Prefix::ED, 0x50) => Ok(Self::IN_D_indC),
            (Prefix::ED, 0x51) => Ok(Self::OUT_indC_D),
            (Prefix::ED, 0x52) => Ok(Self::SBC_HL_DE),
            (Prefix::ED, 0x53) => Ok(Self::LD_indnn_DE),
            (Prefix::ED, 0x56) => Ok(Self::IM_1),
            (Prefix::ED, 0x57) => Ok(Self::LD_A_I),
            (Prefix::ED, 0x58) => Ok(Self::IN_E_indC),
            (Prefix::ED, 0x59) => Ok(Self::OUT_indC_E),
            (Prefix::ED, 0x5A) => Ok(Self::ADC_HL_DE),
            (Prefix::ED, 0x5B) => Ok(Self::LD_DE_indnn),
            (Prefix::ED, 0x5E) => Ok(Self::IM_2),
            (Prefix::ED, 0x5F) => Ok(Self::LD_A_R),
            (Prefix::ED, 0x60) => Ok(Self::IN_H_indC),
            (Prefix::ED, 0x61) => Ok(Self::OUT_indC_H),
            (Prefix::ED, 0x62) => Ok(Self::SBC_HL_HL),
            (Prefix::ED, 0x67) => Ok(Self::RRD),
            (Prefix::ED, 0x68) => Ok(Self::IN_L_indC),
            (Prefix::ED, 0x69) => Ok(Self::OUT_indC_L),
            (Prefix::ED, 0x6A) => Ok(Self::ADC_HL_HL),
            (Prefix::ED, 0x6F) => Ok(Self::RLD),
            (Prefix::ED, 0x72) => Ok(Self::SBC_HL_SP),
            (Prefix::ED, 0x78) => Ok(Self::IN_A_indC),
            (Prefix::ED, 0x79) => Ok(Self::OUT_indC_A),
            (Prefix::ED, 0x7A) => Ok(Self::ADC_HL_SP),
            (Prefix::ED, 0x7B) => Ok(Self::LD_SP_indnn),
            (Prefix::ED, 0xA0) => Ok(Self::LDI),
            (Prefix::ED, 0xA1) => Ok(Self::CPI),
            (Prefix::ED, 0xA2) => Ok(Self::INI),
            (Prefix::ED, 0xA3) => Ok(Self::OUTI),
            (Prefix::ED, 0xA8) => Ok(Self::LDD),
            (Prefix::ED, 0xA9) => Ok(Self::CPD),
            (Prefix::ED, 0xAA) => Ok(Self::IND),
            (Prefix::ED, 0xAB) => Ok(Self::OUTD),
            (Prefix::ED, 0xB0) => Ok(Self::LDIR),
            (Prefix::ED, 0xB1) => Ok(Self::CPIR),
            (Prefix::ED, 0xB2) => Ok(Self::INIR),
            (Prefix::ED, 0xB3) => Ok(Self::OTIR),
            (Prefix::ED, 0xB8) => Ok(Self::LDDR),
            (Prefix::ED, 0xB9) => Ok(Self::CPDR),
            (Prefix::ED, 0xBA) => Ok(Self::INDR),
            (Prefix::ED, 0xBB) => Ok(Self::OTDR),
            _ => Err("Invalid opcode"),
        }
    }

    pub(super) fn decode(self) -> ArrayVec<MicroOp, 10> {
        let mut ops = ArrayVec::new();
        match self {
            Self::NOP => (),
            _ => todo!("decode {:?} into micro ops", self),
        };
        ops
    }

    pub fn encoded_size(self) -> InstructionSize {
        use InstructionSize::*;
        match self {
            Self::NOP => One,
            Self::LD_BC_nn => Three,
            Self::LD_indBC_A => One,
            Self::INC_BC => One,
            Self::INC_B => One,
            Self::DEC_B => One,
            Self::LD_B_n => Two,
            Self::RLCA => One,
            Self::LD_indnn_SP => Three,
            Self::ADD_HL_BC => One,
            Self::LD_A_indBC => One,
            Self::DEC_BC => One,
            Self::INC_C => One,
            Self::DEC_C => One,
            Self::LD_C_n => Two,
            Self::RRCA => One,
            Self::STOP => Two,
            Self::LD_DE_nn => Three,
            Self::LD_indDE_A => One,
            Self::INC_DE => One,
            Self::INC_D => One,
            Self::DEC_D => One,
            Self::LD_D_n => Two,
            Self::RLA => One,
            Self::JR_d => Two,
            Self::ADD_HL_DE => One,
            Self::LD_A_indDE => One,
            Self::DEC_DE => One,
            Self::INC_E => One,
            Self::DEC_E => One,
            Self::LD_E_n => Two,
            Self::RRA => One,
            Self::JR_NZ_d => Two,
            Self::LD_HL_nn => Three,
            Self::LD_indHLI_A => One,
            Self::INC_HL => One,
            Self::INC_H => One,
            Self::DEC_H => One,
            Self::LD_H_n => Two,
            Self::DAA => One,
            Self::JR_Z_d => Two,
            Self::ADD_HL_HL => One,
            Self::LD_A_indHLI => One,
            Self::DEC_HL => One,
            Self::INC_L => One,
            Self::DEC_L => One,
            Self::LD_L_n => Two,
            Self::CPL => One,
            Self::JR_NC_d => Two,
            Self::LD_SP_nn => Three,
            Self::LD_indHLD_A => One,
            Self::INC_SP => One,
            Self::INC_indHL => One,
            Self::DEC_indHL => One,
            Self::LD_indHL_n => Two,
            Self::SCF => One,
            Self::JR_C_d => Two,
            Self::ADD_HL_SP => One,
            Self::LD_A_indHLD => One,
            Self::DEC_SP => One,
            Self::INC_A => One,
            Self::DEC_A => One,
            Self::LD_A_n => Two,
            Self::CCF => One,
            Self::LD_B_B => One,
            Self::LD_B_C => One,
            Self::LD_B_D => One,
            Self::LD_B_E => One,
            Self::LD_B_H => One,
            Self::LD_B_L => One,
            Self::LD_B_indHL => One,
            Self::LD_B_A => One,
            Self::LD_C_B => One,
            Self::LD_C_C => One,
            Self::LD_C_D => One,
            Self::LD_C_E => One,
            Self::LD_C_H => One,
            Self::LD_C_L => One,
            Self::LD_C_indHL => One,
            Self::LD_C_A => One,
            Self::LD_D_B => One,
            Self::LD_D_C => One,
            Self::LD_D_D => One,
            Self::LD_D_E => One,
            Self::LD_D_H => One,
            Self::LD_D_L => One,
            Self::LD_D_indHL => One,
            Self::LD_D_A => One,
            Self::LD_E_B => One,
            Self::LD_E_C => One,
            Self::LD_E_D => One,
            Self::LD_E_E => One,
            Self::LD_E_H => One,
            Self::LD_E_L => One,
            Self::LD_E_indHL => One,
            Self::LD_E_A => One,
            Self::LD_H_B => One,
            Self::LD_H_C => One,
            Self::LD_H_D => One,
            Self::LD_H_E => One,
            Self::LD_H_H => One,
            Self::LD_H_L => One,
            Self::LD_H_indHL => One,
            Self::LD_H_A => One,
            Self::LD_L_B => One,
            Self::LD_L_C => One,
            Self::LD_L_D => One,
            Self::LD_L_E => One,
            Self::LD_L_H => One,
            Self::LD_L_L => One,
            Self::LD_L_indHL => One,
            Self::LD_L_A => One,
            Self::LD_indHL_B => One,
            Self::LD_indHL_C => One,
            Self::LD_indHL_D => One,
            Self::LD_indHL_E => One,
            Self::LD_indHL_H => One,
            Self::LD_indHL_L => One,
            Self::HALT => One,
            Self::LD_indHL_A => One,
            Self::LD_A_B => One,
            Self::LD_A_C => One,
            Self::LD_A_D => One,
            Self::LD_A_E => One,
            Self::LD_A_H => One,
            Self::LD_A_L => One,
            Self::LD_A_indHL => One,
            Self::LD_A_A => One,
            Self::ADD_A_B => One,
            Self::ADD_A_C => One,
            Self::ADD_A_D => One,
            Self::ADD_A_E => One,
            Self::ADD_A_H => One,
            Self::ADD_A_L => One,
            Self::ADD_A_indHL => One,
            Self::ADD_A_A => One,
            Self::ADC_A_B => One,
            Self::ADC_A_C => One,
            Self::ADC_A_D => One,
            Self::ADC_A_E => One,
            Self::ADC_A_H => One,
            Self::ADC_A_L => One,
            Self::ADC_A_indHL => One,
            Self::ADC_A_A => One,
            Self::SUB_B => One,
            Self::SUB_C => One,
            Self::SUB_D => One,
            Self::SUB_E => One,
            Self::SUB_H => One,
            Self::SUB_L => One,
            Self::SUB_indHL => One,
            Self::SUB_A => One,
            Self::SBC_B => One,
            Self::SBC_C => One,
            Self::SBC_D => One,
            Self::SBC_E => One,
            Self::SBC_H => One,
            Self::SBC_L => One,
            Self::SBC_indHL => One,
            Self::SBC_A => One,
            Self::AND_B => One,
            Self::AND_C => One,
            Self::AND_D => One,
            Self::AND_E => One,
            Self::AND_H => One,
            Self::AND_L => One,
            Self::AND_indHL => One,
            Self::AND_A => One,
            Self::XOR_B => One,
            Self::XOR_C => One,
            Self::XOR_D => One,
            Self::XOR_E => One,
            Self::XOR_H => One,
            Self::XOR_L => One,
            Self::XOR_indHL => One,
            Self::XOR_A => One,
            Self::OR_B => One,
            Self::OR_C => One,
            Self::OR_D => One,
            Self::OR_E => One,
            Self::OR_H => One,
            Self::OR_L => One,
            Self::OR_indHL => One,
            Self::OR_A => One,
            Self::CP_B => One,
            Self::CP_C => One,
            Self::CP_D => One,
            Self::CP_E => One,
            Self::CP_H => One,
            Self::CP_L => One,
            Self::CP_indHL => One,
            Self::CP_A => One,
            Self::RET_NZ => One,
            Self::POP_BC => One,
            Self::JP_NZ_nn => Three,
            Self::JP_nn => Three,
            Self::CALL_NZ_nn => Three,
            Self::PUSH_BC => One,
            Self::ADD_A_n => Two,
            Self::RST_00H => One,
            Self::RET_Z => One,
            Self::RET => One,
            Self::JP_Z_nn => Three,
            Self::CALL_Z_nn => Three,
            Self::CALL_nn => Three,
            Self::ADC_A_n => Two,
            Self::RST_08H => One,
            Self::RET_NC => One,
            Self::POP_DE => One,
            Self::JP_NC_nn => Three,
            Self::UNK_D3 => One,
            Self::CALL_NC_nn => Three,
            Self::PUSH_DE => One,
            Self::SUB_n => Two,
            Self::RST_10H => One,
            Self::RET_C => One,
            Self::RETI => One,
            Self::JP_C_nn => Three,
            Self::UNK_DB => One,
            Self::CALL_C_nn => Three,
            Self::UNK_DD => One,
            Self::SBC_A_n => Two,
            Self::RST_18H => One,
            Self::LD_indn_A => Two,
            Self::POP_HL => One,
            Self::LD_indC_A => One,
            Self::UNK_E3 => One,
            Self::UNK_E4 => One,
            Self::PUSH_HL => One,
            Self::AND_n => Two,
            Self::RST_20H => One,
            Self::ADD_SP_d => Two,
            Self::JP_indHL => One,
            Self::LD_indnn_A => Three,
            Self::UNK_EB => One,
            Self::UNK_EC => One,
            Self::XOR_n => Two,
            Self::RST_28H => One,
            Self::LD_A_d => One,
            Self::POP_AF => One,
            Self::UNK_F2 => One,
            Self::DI => One,
            Self::UNK_F4 => One,
            Self::PUSH_AF => One,
            Self::OR_n => Two,
            Self::RST_30H => One,
            Self::LD_HL_SP_d => Two,
            Self::LD_SP_HL => One,
            Self::LD_A_indnn => Three,
            Self::EI => One,
            Self::UNK_FC => One,
            Self::UNK_FD => One,
            Self::CP_n => Two,
            Self::RST_38H => One,
            Self::RLC_B => Two,
            Self::RLC_C => Two,
            Self::RLC_D => Two,
            Self::RLC_E => Two,
            Self::RLC_H => Two,
            Self::RLC_L => Two,
            Self::RLC_indHL => Two,
            Self::RLC_A => Two,
            Self::RRC_B => Two,
            Self::RRC_C => Two,
            Self::RRC_D => Two,
            Self::RRC_E => Two,
            Self::RRC_H => Two,
            Self::RRC_L => Two,
            Self::RRC_indHL => Two,
            Self::RRC_A => Two,
            Self::RL_B => Two,
            Self::RL_C => Two,
            Self::RL_D => Two,
            Self::RL_E => Two,
            Self::RL_H => Two,
            Self::RL_L => Two,
            Self::RL_indHL => Two,
            Self::RL_A => Two,
            Self::RR_B => Two,
            Self::RR_C => Two,
            Self::RR_D => Two,
            Self::RR_E => Two,
            Self::RR_H => Two,
            Self::RR_L => Two,
            Self::RR_indHL => Two,
            Self::RR_A => Two,
            Self::SLA_B => Two,
            Self::SLA_C => Two,
            Self::SLA_D => Two,
            Self::SLA_E => Two,
            Self::SLA_H => Two,
            Self::SLA_L => Two,
            Self::SLA_indHL => Two,
            Self::SLA_A => Two,
            Self::SRA_B => Two,
            Self::SRA_C => Two,
            Self::SRA_D => Two,
            Self::SRA_E => Two,
            Self::SRA_H => Two,
            Self::SRA_L => Two,
            Self::SRA_indHL => Two,
            Self::SRA_A => Two,
            Self::SRL_B => Two,
            Self::SRL_C => Two,
            Self::SRL_D => Two,
            Self::SRL_E => Two,
            Self::SRL_H => Two,
            Self::SRL_L => Two,
            Self::SRL_indHL => Two,
            Self::SRL_A => Two,
            Self::BIT_0_B => Two,
            Self::BIT_0_C => Two,
            Self::BIT_0_D => Two,
            Self::BIT_0_E => Two,
            Self::BIT_0_H => Two,
            Self::BIT_0_L => Two,
            Self::BIT_0_indHL => Two,
            Self::BIT_0_A => Two,
            Self::BIT_1_B => Two,
            Self::BIT_1_C => Two,
            Self::BIT_1_D => Two,
            Self::BIT_1_E => Two,
            Self::BIT_1_H => Two,
            Self::BIT_1_L => Two,
            Self::BIT_1_indHL => Two,
            Self::BIT_1_A => Two,
            Self::BIT_2_B => Two,
            Self::BIT_2_C => Two,
            Self::BIT_2_D => Two,
            Self::BIT_2_E => Two,
            Self::BIT_2_H => Two,
            Self::BIT_2_L => Two,
            Self::BIT_2_indHL => Two,
            Self::BIT_2_A => Two,
            Self::BIT_3_B => Two,
            Self::BIT_3_C => Two,
            Self::BIT_3_D => Two,
            Self::BIT_3_E => Two,
            Self::BIT_3_H => Two,
            Self::BIT_3_L => Two,
            Self::BIT_3_indHL => Two,
            Self::BIT_3_A => Two,
            Self::BIT_4_B => Two,
            Self::BIT_4_C => Two,
            Self::BIT_4_D => Two,
            Self::BIT_4_E => Two,
            Self::BIT_4_H => Two,
            Self::BIT_4_L => Two,
            Self::BIT_4_indHL => Two,
            Self::BIT_4_A => Two,
            Self::BIT_5_B => Two,
            Self::BIT_5_C => Two,
            Self::BIT_5_D => Two,
            Self::BIT_5_E => Two,
            Self::BIT_5_H => Two,
            Self::BIT_5_L => Two,
            Self::BIT_5_indHL => Two,
            Self::BIT_5_A => Two,
            Self::BIT_6_B => Two,
            Self::BIT_6_C => Two,
            Self::BIT_6_D => Two,
            Self::BIT_6_E => Two,
            Self::BIT_6_H => Two,
            Self::BIT_6_L => Two,
            Self::BIT_6_indHL => Two,
            Self::BIT_6_A => Two,
            Self::BIT_7_B => Two,
            Self::BIT_7_C => Two,
            Self::BIT_7_D => Two,
            Self::BIT_7_E => Two,
            Self::BIT_7_H => Two,
            Self::BIT_7_L => Two,
            Self::BIT_7_indHL => Two,
            Self::BIT_7_A => Two,
            Self::RES_0_B => Two,
            Self::RES_0_C => Two,
            Self::RES_0_D => Two,
            Self::RES_0_E => Two,
            Self::RES_0_H => Two,
            Self::RES_0_L => Two,
            Self::RES_0_indHL => Two,
            Self::RES_0_A => Two,
            Self::RES_1_B => Two,
            Self::RES_1_C => Two,
            Self::RES_1_D => Two,
            Self::RES_1_E => Two,
            Self::RES_1_H => Two,
            Self::RES_1_L => Two,
            Self::RES_1_indHL => Two,
            Self::RES_1_A => Two,
            Self::RES_2_B => Two,
            Self::RES_2_C => Two,
            Self::RES_2_D => Two,
            Self::RES_2_E => Two,
            Self::RES_2_H => Two,
            Self::RES_2_L => Two,
            Self::RES_2_indHL => Two,
            Self::RES_2_A => Two,
            Self::RES_3_B => Two,
            Self::RES_3_C => Two,
            Self::RES_3_D => Two,
            Self::RES_3_E => Two,
            Self::RES_3_H => Two,
            Self::RES_3_L => Two,
            Self::RES_3_indHL => Two,
            Self::RES_3_A => Two,
            Self::RES_4_B => Two,
            Self::RES_4_C => Two,
            Self::RES_4_D => Two,
            Self::RES_4_E => Two,
            Self::RES_4_H => Two,
            Self::RES_4_L => Two,
            Self::RES_4_indHL => Two,
            Self::RES_4_A => Two,
            Self::RES_5_B => Two,
            Self::RES_5_C => Two,
            Self::RES_5_D => Two,
            Self::RES_5_E => Two,
            Self::RES_5_H => Two,
            Self::RES_5_L => Two,
            Self::RES_5_indHL => Two,
            Self::RES_5_A => Two,
            Self::RES_6_B => Two,
            Self::RES_6_C => Two,
            Self::RES_6_D => Two,
            Self::RES_6_E => Two,
            Self::RES_6_H => Two,
            Self::RES_6_L => Two,
            Self::RES_6_indHL => Two,
            Self::RES_6_A => Two,
            Self::RES_7_B => Two,
            Self::RES_7_C => Two,
            Self::RES_7_D => Two,
            Self::RES_7_E => Two,
            Self::RES_7_H => Two,
            Self::RES_7_L => Two,
            Self::RES_7_indHL => Two,
            Self::RES_7_A => Two,
            Self::SET_0_B => Two,
            Self::SET_0_C => Two,
            Self::SET_0_D => Two,
            Self::SET_0_E => Two,
            Self::SET_0_H => Two,
            Self::SET_0_L => Two,
            Self::SET_0_indHL => Two,
            Self::SET_0_A => Two,
            Self::SET_1_B => Two,
            Self::SET_1_C => Two,
            Self::SET_1_D => Two,
            Self::SET_1_E => Two,
            Self::SET_1_H => Two,
            Self::SET_1_L => Two,
            Self::SET_1_indHL => Two,
            Self::SET_1_A => Two,
            Self::SET_2_B => Two,
            Self::SET_2_C => Two,
            Self::SET_2_D => Two,
            Self::SET_2_E => Two,
            Self::SET_2_H => Two,
            Self::SET_2_L => Two,
            Self::SET_2_indHL => Two,
            Self::SET_2_A => Two,
            Self::SET_3_B => Two,
            Self::SET_3_C => Two,
            Self::SET_3_D => Two,
            Self::SET_3_E => Two,
            Self::SET_3_H => Two,
            Self::SET_3_L => Two,
            Self::SET_3_indHL => Two,
            Self::SET_3_A => Two,
            Self::SET_4_B => Two,
            Self::SET_4_C => Two,
            Self::SET_4_D => Two,
            Self::SET_4_E => Two,
            Self::SET_4_H => Two,
            Self::SET_4_L => Two,
            Self::SET_4_indHL => Two,
            Self::SET_4_A => Two,
            Self::SET_5_B => Two,
            Self::SET_5_C => Two,
            Self::SET_5_D => Two,
            Self::SET_5_E => Two,
            Self::SET_5_H => Two,
            Self::SET_5_L => Two,
            Self::SET_5_indHL => Two,
            Self::SET_5_A => Two,
            Self::SET_6_B => Two,
            Self::SET_6_C => Two,
            Self::SET_6_D => Two,
            Self::SET_6_E => Two,
            Self::SET_6_H => Two,
            Self::SET_6_L => Two,
            Self::SET_6_indHL => Two,
            Self::SET_6_A => Two,
            Self::SET_7_B => Two,
            Self::SET_7_C => Two,
            Self::SET_7_D => Two,
            Self::SET_7_E => Two,
            Self::SET_7_H => Two,
            Self::SET_7_L => Two,
            Self::SET_7_indHL => Two,
            Self::SET_7_A => Two,
            Self::IN_B_indC => Two,
            Self::OUT_indC_B => Two,
            Self::SBC_HL_BC => Two,
            Self::LD_indnn_BC => Four,
            Self::NEG => Two,
            Self::RETN => Two,
            Self::IM_0 => Two,
            Self::LD_I_A => Two,
            Self::IN_C_indC => Two,
            Self::OUT_indC_C => Two,
            Self::ADC_HL_BC => Two,
            Self::LD_BC_indnn => Four,
            Self::LD_R_A => Two,
            Self::IN_D_indC => Two,
            Self::OUT_indC_D => Two,
            Self::SBC_HL_DE => Two,
            Self::LD_indnn_DE => Four,
            Self::IM_1 => Two,
            Self::LD_A_I => Two,
            Self::IN_E_indC => Two,
            Self::OUT_indC_E => Two,
            Self::ADC_HL_DE => Two,
            Self::LD_DE_indnn => Four,
            Self::IM_2 => Two,
            Self::LD_A_R => Two,
            Self::IN_H_indC => Two,
            Self::OUT_indC_H => Two,
            Self::SBC_HL_HL => Two,
            Self::RRD => Two,
            Self::IN_L_indC => Two,
            Self::OUT_indC_L => Two,
            Self::ADC_HL_HL => Two,
            Self::RLD => Two,
            Self::SBC_HL_SP => Two,
            Self::IN_A_indC => Two,
            Self::OUT_indC_A => Two,
            Self::ADC_HL_SP => Two,
            Self::LD_SP_indnn => Four,
            Self::LDI => Two,
            Self::CPI => Two,
            Self::INI => Two,
            Self::OUTI => Two,
            Self::LDD => Two,
            Self::CPD => Two,
            Self::IND => Two,
            Self::OUTD => Two,
            Self::LDIR => Two,
            Self::CPIR => Two,
            Self::INIR => Two,
            Self::OTIR => Two,
            Self::LDDR => Two,
            Self::CPDR => Two,
            Self::INDR => Two,
            Self::OTDR => Two,
        }
    }

    pub fn immediate_bytes(self) -> ImmediateBytes {
        use ImmediateBytes as IB;
        use InstructionSize as IS;
        match (self as u16 > 0xFF, self.encoded_size()) {
            (false, IS::One) => IB::Zero,
            (false, IS::Two) => IB::One,
            (false, IS::Three) => IB::Two,
            (false, IS::Four) => unreachable!("No un-prefixed instruction has three immediate bytes"),
            (true, IS::One) => unreachable!("Prefixed instructions always use at least two bytes"),
            (true, IS::Two) => IB::Zero,
            (true, IS::Three) => IB::One,
            (true, IS::Four) => IB::Two,
        }
    }
}
